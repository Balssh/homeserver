services:
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    hostname: jellyfin
    networks:
      proxy:
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./jellyfin:/config
      - /data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.entrypoints=web"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.${DOMAIN}`)"
      - "traefik.http.routers.jellyfin.tls=true"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
      - "traefik.http.routers.jellyfin.tls.certresolver=cloudflare"
      - "traefik.http.middlewares.jellyfin-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.jellyfin.middlewares=jellyfin-https-redirect"
      - "traefik.http.routers.jellyfin-secure.entrypoints=web-secure"
      - "traefik.http.routers.jellyfin-secure.rule=Host(`jellyfin.${DOMAIN}`)"
      - "traefik.http.routers.jellyfin-secure.tls=true"
      - "traefik.http.routers.jellyfin-secure.tls.certresolver=cloudflare"

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    hostname: sonarr
    networks:
      proxy:
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./sonarr:/config
      - /data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.entrypoints=web"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.sonarr.tls.certresolver=cloudflare"
      - "traefik.http.middlewares.sonarr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.sonarr.middlewares=sonarr-https-redirect"
      - "traefik.http.routers.sonarr-secure.entrypoints=web-secure"
      - "traefik.http.routers.sonarr-secure.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.routers.sonarr-secure.tls=true"
      - "traefik.http.routers.sonarr-secure.tls.certresolver=cloudflare"

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    hostname: radarr
    networks:
      proxy:
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./radarr:/config
      - /data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.entrypoints=web"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.radarr.tls.certresolver=cloudflare"
      - "traefik.http.middlewares.radarr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.radarr.middlewares=radarr-https-redirect"
      - "traefik.http.routers.radarr-secure.entrypoints=web-secure"
      - "traefik.http.routers.radarr-secure.rule=Host(`radarr.${DOMAIN}`)"
      - "traefik.http.routers.radarr-secure.tls=true"

  # lidarr:
  #   image: lscr.io/linuxserver/lidarr:latest
  #   container_name: lidarr
  #   restart: unless-stopped
  #   networks:
  #     proxy:
  #       ipv4_address: 172.19.0.103
  #   environment:
  #     - PUID=${USER_ID}
  #     - PGID=${GROUP_ID}
  #     - TZ=${TIMEZONE}
  #   volumes:
  #     - ./lidarr:/config
  #     - /data:/data
  #   ports:
  #     - 8686:8686
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.lidarr.entrypoints=http"
  #     - "traefik.http.routers.lidarr.rule=Host(`lidarr.${DOMAIN}`)"
  #     - "traefik.http.routers.lidarr.tls=true"
  #     - "traefik.http.services.lidarr.loadbalancer.server.port=8686"
  #     - "traefik.http.routers.lidarr.tls.certresolver=cloudflare"
  #     - "traefik.http.middlewares.lidarr-https-redirect.redirectscheme.scheme=https"
  #     - "traefik.http.routers.lidarr.middlewares=lidarr-https-redirect"
  #     - "traefik.http.routers.lidarr-secure.entrypoints=https"
  #     - "traefik.http.routers.lidarr-secure.rule=Host(`lidarr.${DOMAIN}`)"
  #     - "traefik.http.routers.lidarr-secure.tls=true"

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    hostname: bazarr
    networks:
      proxy:
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./bazarr:/config
      - /data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.entrypoints=web"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.${DOMAIN}`)"
      - "traefik.http.routers.bazarr.tls=true"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
      - "traefik.http.routers.bazarr.tls.certresolver=cloudflare"
      - "traefik.http.middlewares.bazarr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.bazarr.middlewares=bazarr-https-redirect"
      - "traefik.http.routers.bazarr-secure.entrypoints=web-secure"
      - "traefik.http.routers.bazarr-secure.rule=Host(`bazarr.${DOMAIN}`)"
      - "traefik.http.routers.bazarr-secure.tls=true"

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:libtorrentv1
    container_name: qbittorrent
    restart: unless-stopped
    hostname: qbittorent
    networks:
      proxy:
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
      - DOCKER_MODS=ghcr.io/gabe565/linuxserver-mod-vuetorrent
    volumes:
      - ./qbittorrent:/config
      - /data/torrents:/data/torrents
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorent.entrypoints=web"
      - "traefik.http.routers.qbittorent.rule=Host(`qbittorent.${DOMAIN}`)"
      - "traefik.http.routers.qbittorent.tls=true"
      - "traefik.http.services.qbittorent.loadbalancer.server.port=8080"
      - "traefik.http.routers.qbittorent.tls.certresolver=cloudflare"
      - "traefik.http.middlewares.qbittorent-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.qbittorent.middlewares=qbittorent-https-redirect"
      - "traefik.http.routers.qbittorent-secure.entrypoints=web-secure"
      - "traefik.http.routers.qbittorent-secure.rule=Host(`qbittorent.${DOMAIN}`)"
      - "traefik.http.routers.qbittorent-secure.tls=true"

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    hostname: prowlarr
    networks:
      proxy:
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./prowlarr:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.entrypoints=web"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.${DOMAIN}`)"
      - "traefik.http.routers.prowlarr.tls=true"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
      - "traefik.http.routers.prowlarr.tls.certresolver=cloudflare"
      - "traefik.http.middlewares.prowlarr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.prowlarr.middlewares=prowlarr-https-redirect"
      - "traefik.http.routers.prowlarr-secure.entrypoints=web-secure"
      - "traefik.http.routers.prowlarr-secure.rule=Host(`prowlarr.${DOMAIN}`)"
      - "traefik.http.routers.prowlarr-secure.tls=true"

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    hostname: flaresolverr
    networks:
      proxy:
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - TZ=${TIMEZONE}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flaresolverr.entrypoints=web"
      - "traefik.http.routers.flaresolverr.rule=Host(`flaresolverr.${DOMAIN}`)"
      - "traefik.http.routers.flaresolverr.tls=true"
      - "traefik.http.services.flaresolverr.loadbalancer.server.port=8191"
      - "traefik.http.routers.flaresolverr.tls.certresolver=cloudflare"
      - "traefik.http.middlewares.flaresolverr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.flaresolverr.middlewares=flaresolverr-https-redirect"
      - "traefik.http.routers.flaresolverr-secure.entrypoints=web-secure"
      - "traefik.http.routers.flaresolverr-secure.rule=Host(`flaresolverr.${DOMAIN}`)"
      - "traefik.http.routers.flaresolverr-secure.tls=true"

networks:
  proxy:
    external: true
